#!/bin/bash

export RDB_NAME="Our Debug Bridge"
export RDB_VERSION="1.1.0"

export RDB_BASE_PATH=$(dirname $0)
export RDB_BASE_NAME=$(basename $0)
export RDB="${RDB_BASE_PATH}/${RDB_BASE_NAME}"

RDB_UTIL_FILENAME="rdb.util"
export RDB_UTIL="$RDB_BASE_PATH/$RDB_UTIL_FILENAME"

RDB_CONFIG_FILENAME="rdb.config"
. $RDB_BASE_PATH/$RDB_CONFIG_FILENAME

RDB_BYPASS_CHARACTER='!'
export RDB_CONFIRM_BYPASS="false"

get_command_full_path() {
  for command in $(find ${RDB_COMMANDS_PATH} -type f | grep -v '/\.')
  do
    if [ "$1" == "${command##*/}" ] ; then
	  echo $command
      return 0
    fi
  done
  echo "unrecognized"
  return 1
}

while [[ $# > 0 && $1 == -* ]] ; do
  case "$1" in
    -s )
      if [[ $# -lt 2 || $2 == -* ]] ; then
        echo "$(tput setaf 1)Missing argument for option '$1'.$(tput sgr0)"
        $(get_command_full_path "${RDB_COMMAND_HELP_NAME}")
        exit 1
      fi
      export RDB_DEVICE_SELECT="-s ${!2:-$2}"
      shift
      ;;
    -a )
      RDB_EXECUTE_ON_ALL_DEVICES=true
      ;;
    * )
      echo "$(tput setaf 1)Option '$1' not recognized.$(tput sgr0)"
      $(get_command_full_path "${RDB_COMMAND_HELP_NAME}")
      exit 1
      ;;
  esac
  shift
done

if [ $# == 0 ] ; then
  echo "$(tput setaf 5)No command specified.$(tput sgr0)"
  $(get_command_full_path "${RDB_COMMAND_HELP_NAME}")
  exit 1
else
  if [[ $1 == *$RDB_BYPASS_CHARACTER ]] ; then
    export RDB_CONFIRM_BYPASS="true"
    RDB_COMMAND_NAME=${1%$RDB_BYPASS_CHARACTER}
  else
    export RDB_CONFIRM_BYPASS="false"
    RDB_COMMAND_NAME="$1"
  fi
  RDB_COMMAND=$(get_command_full_path $RDB_COMMAND_NAME)
  shift
  if [ ${RDB_COMMAND} == "unrecognized" ] ; then
    echo "$(tput setaf 1)Command not recognized. RTFM!$(tput sgr0)"
    $(get_command_full_path "${RDB_COMMAND_HELP_NAME}")
    exit 1
  else
    if [ "${RDB_EXECUTE_ON_ALL_DEVICES}" == true ] && [[ "${RDB_COMMAND}" != "${RDB_COMMANDS_INDEPENDENT_PATH}"* ]] ; then
      if [[ "${RDB_COMMAND}" == "${RDB_COMMANDS_SYNCHRONOUS_PATH}"* ]] ; then
        echo "$(tput setaf 1)Unable to execute command with multiple devices connected.$(tput sgr0)"
        exit 1
      fi
      echo
      while read -u 3 line ; do
        if [ ! "$line" = "" ] && [ `echo $line | awk '{print $2}'` = "device" ] ; then
          device=`echo $line | awk '{print $1}'`
          echo "Executing on device: $(tput setaf 6)${device}$(tput sgr0) ["`echo $line | awk '{print $4}'`"]"
          export RDB_DEVICE_SELECT="-s ${device}"
          $RDB_COMMAND "$@"
          echo
        fi
      done 3<<< "$(adb devices -l)"
    else
      $RDB_COMMAND "$@"
    fi
  fi
fi
